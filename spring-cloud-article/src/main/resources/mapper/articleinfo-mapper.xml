<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jason.article.mapper.ArticleMapper">

    <resultMap id="BaseResultMap" type="com.jason.article.domain.ArticleEntity">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="title" jdbcType="VARCHAR" property="title" />
        <result column="post_medium_image" jdbcType="VARCHAR" property="postMediumImage" />
        <result column="link" jdbcType="VARCHAR" property="link" />
        <result column="author" jdbcType="VARCHAR" property="author" />
        <result column="excerpt" jdbcType="VARCHAR" property="excerpt" />
        <result column="category_name" jdbcType="VARCHAR" property="categoryName" />
        <result column="post_date" jdbcType="TIMESTAMP" property="postDate" />
        <result column="pageviews" jdbcType="INTEGER" property="pageviews" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="create_user_acount" jdbcType="TIMESTAMP" property="createUserAcount" />
        <result column="liked_count" jdbcType="INTEGER" property="likedCount" />
        <result column="browse_count" jdbcType="INTEGER" property="browseCount" />
    </resultMap>
    <sql id="Base_Column_List">
    id, title, post_medium_image, link, author, excerpt, category_name, post_date,
    pageviews, create_time, create_user_acount,liked_count,browse_count
  </sql>

    <select id="queryArticleCount" parameterType="com.jason.article.dto.ArticleDto" resultType="int">
        select
            count(*)
            from t_bas_article_info
            <if test="keywords!=null and keywords!=''">
            where title like concat(#{keywords,jdbcType=VARCHAR},'%')
            </if>
    </select>
    <select id="queryArticle" parameterType="com.jason.article.dto.ArticleDto" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from t_bas_article_info
        <if test="keywords!=null and keywords!=''">
        where title like concat(#{keywords,jdbcType=VARCHAR},'%')
        </if>
        limit #{start,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
    </select>

    <select id="queryArticleById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from t_bas_article_info
        where id = #{id,jdbcType=VARCHAR} LIMIT 1
    </select>

    <insert id="saveArticleInfo" parameterType="com.jason.article.dto.ArticleDto">
        insert into t_bas_article_info (id,title, post_medium_image, link,
      author, excerpt, like_count,
      category_name, post_date, pageviews,
      create_time, create_user_acount)
    values (#{id,jdbcType=VARCHAR},#{title,jdbcType=VARCHAR}, #{postMediumImage,jdbcType=VARCHAR}, #{link,jdbcType=VARCHAR},
      #{author,jdbcType=VARCHAR}, #{excerpt,jdbcType=VARCHAR}, #{likeCount,jdbcType=INTEGER},
      #{categoryName,jdbcType=VARCHAR}, #{postDate,jdbcType=TIMESTAMP}, #{pageviews,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{createUserAcount,jdbcType=VARCHAR})
    </insert>

    <select id="queryIndexImage" resultType="map">
    select  id,image_type as type,post_title,post_medium_image from t_bas_image
    </select>

    <insert id="saveArticleRelation" parameterType="map">
        insert into t_bas_article_relation (id,account,article_id,article_count,create_time,operate_type)
        values
           (
            #{id,jdbcType=VARCHAR},#{account,jdbcType=BIGINT}, #{articleId,jdbcType=VARCHAR},
            #{articleCount,jdbcType=BIGINT},#{createTime,jdbcType=TIMESTAMP},#{opeType,jdbcType=VARCHAR}
            )
    </insert>

    <delete id="deleteArticleRelationByAccount" parameterType="long">
        delete from t_bas_article_relation where account = #{account,jdbcType=BIGINT}
    </delete>

    <update id="updateArticleInfo" parameterType="map">
        update t_bas_article_info set
        <if test="likedCount !=null and likedCount!='' ">
            liked_count = #{likedCount,jdbcType=INTEGER}
        </if>
        <if test="browseCount !=null and browseCount!='' ">
            browse_count = #{browseCount,jdbcType=INTEGER}
        </if>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <delete id="deleteArticleRelation" parameterType="map">
        delete from t_bas_article_relation
        where account = #{account,jdbcType=BIGINT}
        and  article_id = #{articleId,jdbcType=VARCHAR}
        and operate_type = #{opeType,jdbcType=VARCHAR}
    </delete>

    <select id="showArticleLikedCount" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from t_bas_article_info ORDER BY liked_count desc limit 10
    </select>

    <select id="showArticleBrowseCount" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from t_bas_article_info ORDER BY browse_count desc limit 10
    </select>

    <select id="showArticleOrderTimeCount" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from t_bas_article_info ORDER BY create_time desc limit 10
    </select>

    <select id="queryArticleRelationCount" parameterType="com.jason.article.dto.ArticleLikeDto" resultType="int">
        select count(*)
        from t_bas_article_relation
        where
        account = #{account}
        and article_id = #{articleId}
        and operate_type = #{opeType}
    </select>

    <select id="queryArticleLikeAndCollectCount" parameterType="string" resultType="com.jason.article.domain.ArticleLIkeEntity">
        SELECT
        (
            SELECT
                count(*)
            FROM
                t_bas_article_relation
            WHERE
                article_id = #{articleId}
            AND operate_type = 1
        ) as 'likedCount',
        (
            SELECT
                count(*)
            FROM
                t_bas_article_relation
            WHERE
                article_id = #{articleId}
            AND operate_type = 2
        ) as 'collectCount'
    </select>

    <select id="queryArticleLikeAndCollectInfo" parameterType="map" resultType="com.jason.article.domain.ArticleLIkeEntity">
        SELECT
            (
                SELECT
                    count(*)
                FROM
                    t_bas_article_relation
                WHERE
                    article_id = #{articleId}
                AND account = #{account}
                AND operate_type = 1
            ) AS 'isLiked',
            (
                SELECT
                    count(*)
                FROM
                    t_bas_article_relation
                WHERE
                    article_id = #{articleId}
                AND account = #{account}
                AND operate_type = 2
            ) AS 'isCollect'
    </select>



</mapper>
